mp.i <- player_gamelog(player = i, season = season)[, c('Rk', 'MP')]
mp.i$MP[mp.i$MP == 'Inactive' | mp.i$MP == 'Did Not Play'] <- 0
mp.i <- separate(data = mp.i,
col = MP,
into = c('M', 'S'),
sep = ':')
mp.i$MP <- as.numeric(mp.i$M) + as.numeric(mp.i$S) / 60
mp.i <- mp.i %>%
select(Rk, MP) %>%
mutate(Rk = as.numeric(Rk))
mp <- mp %>%
full_join(mp.i,
by = 'Rk')
}
View(mp)
View(mp.i)
View(mp.i)
# Clear workspace and set seed.
rm(list = ls())
set.seed(55)
setwd('./MyProjects/NBA/R/Projects/Spurs_Trends')
source('../../Scrapers/bballref_playerlinks.R')
source('../../Scrapers/bballref_gamelog.R')
library(dplyr)
library(tidyr)
library(reshape2)
# DATA PREPARATION --------------------------------------------------------
season = '2022'
spurs <- c('Keldon Johnson', 'Lonnie Walker IV', 'Drew Eubanks',
'Dejounte Murray', 'Derrick White', 'Devin Vassell',
'Jakob Poeltl', 'Tre Jones', 'Keita Bates-Diop',
'Doug McDermott', 'Jock Landale')
g <- seq(from = 1, to = 52, by = 1)
mp <- data.frame(Rk = g)
for (i in spurs) {
mp.i <- player_gamelog(player = i, season = season)[, c('Rk', 'MP')]
mp.i$MP[mp.i$MP == 'Inactive' | mp.i$MP == 'Did Not Play'] <- 0
mp.i <- separate(data = mp.i,
col = MP,
into = c('M', 'S'),
sep = ':')
mp.i$MP <- as.numeric(mp.i$M) + as.numeric(mp.i$S) / 60
mp.i <- mp.i %>%
select(Rk, MP) %>%
mutate(Rk = as.numeric(Rk))
mp <- mp %>%
full_join(mp.i,
by = 'Rk')
}
colnames(mp) <- c('Rk', spurs)
mp.melt <- melt(mp,
id.vars = 'Rk')
ggplot(data = mp,
aes(x = Rk,
y = ))
# setwd('./MyProjects/NBA/R/Scrapers')
player_gamelog <- function(player, season) {
# source('bballref_playerlinks.R')
library(rvest)
library(stringi)
library(ggplot2)
library(plotly)
library(ggthemes)
library(dplyr)
players <- player_url_bballref(player = player)
season <- season
gamelog.url <- paste(substr(x = players$player_url,
start = 1,
stop = nchar(players$player_url) - 5),
'/gamelog/',
season,
sep = '')
gamelog <- gamelog.url %>%
read_html() %>%
html_table() %>%
.[[8]]
gamelog <- gamelog[gamelog$Rk != 'Rk', ]
gamelog.gp <- gamelog[!is.na(as.numeric(as.character(gamelog$G))), ]
# gamelog.gp$G <- as.numeric(gamelog.gp$G)
# gamelog.gp$PTS <- as.numeric(gamelog.gp$PTS)
# gamelog.gp$TRB <- as.numeric(gamelog.gp$TRB)
#
# pts.g <- mean(gamelog.gp$PTS)
# trb.g <- mean(gamelog.gp$TRB)
#
# ggplot(data = gamelog.gp,
#        aes(x = G,
#            y = TRB)) +
#   geom_line() +
#   geom_hline(yintercept = trb.g) +
#   theme_solarized_2()
return(gamelog)
}
# TESTING -----------------------------------------------------------------
x <- player_gamelog(player = 'Jock Landale', season = '2022')
# setwd('./MyProjects/NBA/R/Scrapers')
player_gamelog <- function(player, season) {
source('bballref_playerlinks.R')
library(rvest)
library(stringi)
library(ggplot2)
library(plotly)
library(ggthemes)
library(dplyr)
players <- player_url_bballref(player = player)
season <- season
gamelog.url <- paste(substr(x = players$player_url,
start = 1,
stop = nchar(players$player_url) - 5),
'/gamelog/',
season,
sep = '')
gamelog <- gamelog.url %>%
read_html() %>%
html_table() %>%
.[[8]]
gamelog <- gamelog[gamelog$Rk != 'Rk', ]
gamelog.gp <- gamelog[!is.na(as.numeric(as.character(gamelog$G))), ]
# gamelog.gp$G <- as.numeric(gamelog.gp$G)
# gamelog.gp$PTS <- as.numeric(gamelog.gp$PTS)
# gamelog.gp$TRB <- as.numeric(gamelog.gp$TRB)
#
# pts.g <- mean(gamelog.gp$PTS)
# trb.g <- mean(gamelog.gp$TRB)
#
# ggplot(data = gamelog.gp,
#        aes(x = G,
#            y = TRB)) +
#   geom_line() +
#   geom_hline(yintercept = trb.g) +
#   theme_solarized_2()
return(gamelog)
}
# TESTING -----------------------------------------------------------------
x <- player_gamelog(player = 'Jock Landale', season = '2022')
# setwd('./MyProjects/NBA/R/Scrapers')
player_gamelog <- function(player, season) {
source('bballref_playerlinks.R')
library(rvest)
library(stringi)
library(ggplot2)
library(plotly)
library(ggthemes)
library(dplyr)
players <- player_url_bballref(player = player)
season <- season
gamelog.url <- paste(substr(x = players$player_url,
start = 1,
stop = nchar(players$player_url) - 5),
'/gamelog/',
season,
sep = '')
gamelog <- curl::curl(gamelog.url) %>%
read_html() %>%
html_table() %>%
.[[8]]
gamelog <- gamelog[gamelog$Rk != 'Rk', ]
gamelog.gp <- gamelog[!is.na(as.numeric(as.character(gamelog$G))), ]
# gamelog.gp$G <- as.numeric(gamelog.gp$G)
# gamelog.gp$PTS <- as.numeric(gamelog.gp$PTS)
# gamelog.gp$TRB <- as.numeric(gamelog.gp$TRB)
#
# pts.g <- mean(gamelog.gp$PTS)
# trb.g <- mean(gamelog.gp$TRB)
#
# ggplot(data = gamelog.gp,
#        aes(x = G,
#            y = TRB)) +
#   geom_line() +
#   geom_hline(yintercept = trb.g) +
#   theme_solarized_2()
return(gamelog)
}
# TESTING -----------------------------------------------------------------
x <- player_gamelog(player = 'Jock Landale', season = '2022')
?curl
# setwd('./MyProjects/NBA/R/Scrapers')
player_gamelog <- function(player, season) {
source('bballref_playerlinks.R')
library(rvest)
library(stringi)
library(ggplot2)
library(plotly)
library(ggthemes)
library(dplyr)
players <- player_url_bballref(player = player)
season <- season
gamelog.url <- paste(substr(x = players$player_url,
start = 1,
stop = nchar(players$player_url) - 5),
'/gamelog/',
season,
sep = '')
gamelog <- curl(gamelog.url) %>%
read_html() %>%
html_table() %>%
.[[8]]
gamelog <- gamelog[gamelog$Rk != 'Rk', ]
gamelog.gp <- gamelog[!is.na(as.numeric(as.character(gamelog$G))), ]
# gamelog.gp$G <- as.numeric(gamelog.gp$G)
# gamelog.gp$PTS <- as.numeric(gamelog.gp$PTS)
# gamelog.gp$TRB <- as.numeric(gamelog.gp$TRB)
#
# pts.g <- mean(gamelog.gp$PTS)
# trb.g <- mean(gamelog.gp$TRB)
#
# ggplot(data = gamelog.gp,
#        aes(x = G,
#            y = TRB)) +
#   geom_line() +
#   geom_hline(yintercept = trb.g) +
#   theme_solarized_2()
return(gamelog)
}
# TESTING -----------------------------------------------------------------
x <- player_gamelog(player = 'Jock Landale', season = '2022')
# setwd('./MyProjects/NBA/R/Scrapers')
player_gamelog <- function(player, season) {
source('bballref_playerlinks.R')
library(rvest)
library(stringi)
library(ggplot2)
library(plotly)
library(ggthemes)
library(dplyr)
players <- player_url_bballref(player = player)
season <- season
gamelog.url <- paste(substr(x = players$player_url,
start = 1,
stop = nchar(players$player_url) - 5),
'/gamelog/',
season,
sep = '')
gamelog <- gamelog.url %>%
read_html() %>%
html_table() %>%
.[[8]]
gamelog <- gamelog[gamelog$Rk != 'Rk', ]
gamelog.gp <- gamelog[!is.na(as.numeric(as.character(gamelog$G))), ]
# gamelog.gp$G <- as.numeric(gamelog.gp$G)
# gamelog.gp$PTS <- as.numeric(gamelog.gp$PTS)
# gamelog.gp$TRB <- as.numeric(gamelog.gp$TRB)
#
# pts.g <- mean(gamelog.gp$PTS)
# trb.g <- mean(gamelog.gp$TRB)
#
# ggplot(data = gamelog.gp,
#        aes(x = G,
#            y = TRB)) +
#   geom_line() +
#   geom_hline(yintercept = trb.g) +
#   theme_solarized_2()
return(gamelog)
}
# TESTING -----------------------------------------------------------------
x <- player_gamelog(player = 'Jock Landale', season = '2022')
# setwd('./MyProjects/NBA/R/Scrapers')
player_gamelog <- function(player, season) {
source('bballref_playerlinks.R')
library(rvest)
library(stringi)
library(ggplot2)
library(plotly)
library(ggthemes)
library(dplyr)
players <- player_url_bballref(player = player)
season <- season
gamelog.url <- paste(substr(x = players$player_url,
start = 1,
stop = nchar(players$player_url) - 5),
'/gamelog/',
season,
sep = '')
gamelog <- gamelog.url %>%
read_html() %>%
html_table() %>%
.[[8]]
gamelog <- gamelog[gamelog$Rk != 'Rk', ]
gamelog.gp <- gamelog[!is.na(as.numeric(as.character(gamelog$G))), ]
# gamelog.gp$G <- as.numeric(gamelog.gp$G)
# gamelog.gp$PTS <- as.numeric(gamelog.gp$PTS)
# gamelog.gp$TRB <- as.numeric(gamelog.gp$TRB)
#
# pts.g <- mean(gamelog.gp$PTS)
# trb.g <- mean(gamelog.gp$TRB)
#
# ggplot(data = gamelog.gp,
#        aes(x = G,
#            y = TRB)) +
#   geom_line() +
#   geom_hline(yintercept = trb.g) +
#   theme_solarized_2()
return(gamelog)
}
# TESTING -----------------------------------------------------------------
x <- player_gamelog(player = 'Jock Landale', season = '2022')
# Clear workspace and set seed.
# rm(list = ls())
# set.seed(55)
player_url_bballref <- function(player = "ALL") {
# Import libraries.
library(rvest)
library(qpcR)
library(stringr)
library(dplyr)
# Create vector of letters for players' last names.
# No player has last name starting with X.
alpha <- letters[-24]
urls <- c()
player_url <- c()
player_name <- c()
player_data <- c()
for (i in alpha) {
url <- paste("https://www.basketball-reference.com/players/", i, "/",
sep = "")
url_data <- read_html(url)
player_name <- c(player_name, tail(url_data %>%
html_nodes("th") %>%
html_text(),
n = -8))
player_name <- str_replace(string = player_name,
pattern = '\\*',
replacement = '')
player_data <- c(player_data, url_data %>%
html_nodes("td") %>%
html_text())
yr_start <- player_data[seq(1,length(player_data), 7)]
yr_end <- player_data[seq(2,length(player_data), 7)]
all_url <- html_attr(html_nodes(url_data, "a"), "href")
name_urls <- c()
pattern <- "/players/."
for (j in all_url) {
if (grepl("#header", j)) {
break
} else if (grepl(pattern, j)) {
name_urls <- c(name_urls, j)
}
}
player_url <- c(player_url, name_urls)
}
player_url <- paste("https://www.basketball-reference.com", player_url,
sep = "")
player_mat <- qpcR:::cbind.na(player_name, player_url, yr_start, yr_end)
players <- as.data.frame(player_mat)
if (player == 'ALL') {
return(players)
} else {
players <- players %>%
filter(player_name == player)
return(players)
}
}
# TESTING -----------------------------------------------------------------
x <- player_url_bballref(player = 'Jakob Poeltl')
# Clear workspace and set seed.
# rm(list = ls())
# set.seed(55)
player_url_bballref <- function(player = "ALL") {
# Import libraries.
library(rvest)
library(qpcR)
library(stringr)
library(dplyr)
# Create vector of letters for players' last names.
# No player has last name starting with X.
alpha <- letters[-24]
urls <- c()
player_url <- c()
player_name <- c()
player_data <- c()
for (i in alpha) {
url <- paste("https://www.basketball-reference.com/players/", i, "/",
sep = "")
url_data <- read_html(url)
player_name <- c(player_name, tail(url_data %>%
html_nodes("th") %>%
html_text(),
n = -8))
player_name <- str_replace(string = player_name,
pattern = '\\*',
replacement = '')
player_data <- c(player_data, url_data %>%
html_nodes("td") %>%
html_text())
yr_start <- player_data[seq(1,length(player_data), 7)]
yr_end <- player_data[seq(2,length(player_data), 7)]
all_url <- html_attr(html_nodes(url_data, "a"), "href")
name_urls <- c()
pattern <- "/players/."
for (j in all_url) {
if (grepl("#header", j)) {
break
} else if (grepl(pattern, j)) {
name_urls <- c(name_urls, j)
}
}
player_url <- c(player_url, name_urls)
}
player_url <- paste("https://www.basketball-reference.com", player_url,
sep = "")
player_mat <- qpcR:::cbind.na(player_name, player_url, yr_start, yr_end)
players <- as.data.frame(player_mat)
if (player == 'ALL') {
return(players)
} else {
players <- players %>%
filter(player_name == player)
return(players)
}
}
# TESTING -----------------------------------------------------------------
x <- player_url_bballref(player = 'Jakob Poeltl')
x <- player_url_bballref(player = 'Jakob Poeltl')
View(x)
# Clear workspace and set seed.
# rm(list = ls())
# set.seed(55)
player_url_bballref <- function(player = "ALL") {
# Import libraries.
library(rvest)
library(qpcR)
library(stringr)
library(dplyr)
# Create vector of letters for players' last names.
# No player has last name starting with X.
alpha <- letters[-24]
urls <- c()
player_url <- c()
player_name <- c()
player_data <- c()
for (i in alpha) {
url <- paste("https://www.basketball-reference.com/players/", i, "/",
sep = "")
url_data <- read_html(url)
player_name <- c(player_name, tail(url_data %>%
html_nodes("th") %>%
html_text(),
n = -8))
player_name <- str_replace(string = player_name,
pattern = '\\*',
replacement = '')
player_data <- c(player_data, url_data %>%
html_nodes("td") %>%
html_text())
yr_start <- player_data[seq(1,length(player_data), 7)]
yr_end <- player_data[seq(2,length(player_data), 7)]
all_url <- html_attr(html_nodes(url_data, "a"), "href")
name_urls <- c()
pattern <- "/players/."
for (j in all_url) {
if (grepl("#header", j)) {
break
} else if (grepl(pattern, j)) {
name_urls <- c(name_urls, j)
}
}
player_url <- c(player_url, name_urls)
}
player_url <- paste("https://www.basketball-reference.com", player_url,
sep = "")
player_mat <- qpcR:::cbind.na(player_name, player_url, yr_start, yr_end)
players <- as.data.frame(player_mat)
if (player == 'ALL') {
return(players)
} else {
players <- players %>%
filter(player_name == player)
return(players)
}
}
# TESTING -----------------------------------------------------------------
x <- player_url_bballref(player = 'Jakob Poeltl')
x <- player_url_bballref(player = 'Jakob Poeltl')
x <- player_gamelog(player = 'Jock Landale', season = '2022')
player_gamelog <- function(player, season) {
source('bballref_playerlinks.R')
library(rvest)
library(stringi)
library(ggplot2)
library(plotly)
library(ggthemes)
library(dplyr)
players <- player_url_bballref(player = player)
season <- season
gamelog.url <- paste(substr(x = players$player_url,
start = 1,
stop = nchar(players$player_url) - 5),
'/gamelog/',
season,
sep = '')
gamelog <- gamelog.url %>%
read_html() %>%
html_table() %>%
.[[8]]
gamelog <- gamelog[gamelog$Rk != 'Rk', ]
gamelog.gp <- gamelog[!is.na(as.numeric(as.character(gamelog$G))), ]
# gamelog.gp$G <- as.numeric(gamelog.gp$G)
# gamelog.gp$PTS <- as.numeric(gamelog.gp$PTS)
# gamelog.gp$TRB <- as.numeric(gamelog.gp$TRB)
#
# pts.g <- mean(gamelog.gp$PTS)
# trb.g <- mean(gamelog.gp$TRB)
#
# ggplot(data = gamelog.gp,
#        aes(x = G,
#            y = TRB)) +
#   geom_line() +
#   geom_hline(yintercept = trb.g) +
#   theme_solarized_2()
return(gamelog)
}
x <- player_gamelog(player = 'Jock Landale', season = '2022')
