# Import libraries.
library(rpart)
# Specify minimum leaf size required before branching.
# 10% of data must occupy leaf before split is attempted.
minleaf <- ceiling(nrow(uscrime_raw) * 0.05) * 2
# Create regression tree model.
treeA <- rpart(formula = Crime ~ .,
data = uscrime_raw,
method = 'anova',
control = rpart.control(minsplit = minleaf))
treeA
plot(treeA)
# treeB <- rpart(formula = Crime ~ Ed + Ineq + U2,
# treeB <- rpart(formula = Crime ~ Ed + Ineq + U2,
#                data = uscrime_raw,
# treeB <- rpart(formula = Crime ~ Ed + Ineq + U2,
#                data = uscrime_raw,
#                method = 'anova',
getwd()
setwd("C:/Users/caler/Documents")
getwd()
getwd()
?cv.kknn
knit_with_parameters('~/OMSA/ISYE6501/Homework/Week_13/Results/Week13HW.Rmd', encoding = 'UTF-8')
library(tidyverse)
library(httr)
library(hexbin)
library(jsonlite)
library(scales)
percent_formatter = function(x) {
scales::percent(x, accuracy = 1)
}
players_url = "http://stats.nba.com/stats/commonallplayers?LeagueID=00&Season=2019-20&IsOnlyCurrentSeason=0"
request_headers = c(
`Connection` = 'keep-alive',
`Accept` = 'application/json, text/plain, */*',
`x-nba-stats-token` = 'true',
`X-NewRelic-ID` = 'VQECWF5UChAHUlNTBwgBVw==',
`User-Agent` = 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.87 Safari/537.36',
`x-nba-stats-origin` = 'stats',
`Sec-Fetch-Site` = 'same-origin',
`Sec-Fetch-Mode` = 'cors',
`Referer` = 'https://stats.nba.com/players/leaguedashplayerbiostats/',
`Accept-Encoding` = 'gzip, deflate, br',
`Accept-Language` = 'en-US,en;q=0.9'
)
request = GET(players_url, add_headers(request_headers))
View(request)
players_data = fromJSON(content(request, as = "text"))
View(players_data)
players = tbl_df(data.frame(players_data$resultSets$rowSet[[1]], stringsAsFactors = FALSE))
View(players)
names(players) = tolower(players_data$resultSets$headers[[1]])
players = mutate(players,
person_id = as.numeric(person_id),
rosterstatus = as.logical(as.numeric(rosterstatus)),
from_year = as.numeric(from_year),
to_year = as.numeric(to_year),
team_id = as.numeric(team_id)
)
if (Sys.Date() <= as.Date("2017-10-20")) {
players = mutate(players, to_year = pmin(to_year, 2016))
}
players$name = sapply(players$display_last_comma_first, function(s) {
paste(rev(strsplit(s, ", ")[[1]]), collapse = " ")
})
first_year_of_data = 1996
last_year_of_data = max(players$to_year)
season_strings = paste(first_year_of_data:last_year_of_data,
substr(first_year_of_data:last_year_of_data + 1, 3, 4),
sep = "-")
names(season_strings) = first_year_of_data:last_year_of_data
available_players = filter(players, to_year >= first_year_of_data)
View(available_players)
names_table = table(available_players$name)
dupe_names = names(names_table[which(names_table > 1)])
available_players$name[available_players$name %in% dupe_names] = paste(
available_players$name[available_players$name %in% dupe_names],
available_players$person_id[available_players$name %in% dupe_names]
)
available_players$lower_name = tolower(available_players$name)
available_players = arrange(available_players, lower_name)
View(available_players)
find_player_by_name = function(n) {
filter(available_players, lower_name == tolower(n))
}
find_player_id_by_name = function(n) {
find_player_by_name(n)$person_id
}
source("../Functions/lookup_playerID.R")
source("./Functions/lookup_playerID.R")
setwd("./Shotcharts")
getwd()
# Clear workspace and set seed.
rm(list = ls())
set.seed(55)
# Import libraries.
library(readxl)
# Read in shot data.
data <- read_excel('shots_data.csv',
col_names = TRUE)
# Clear workspace and set seed.
rm(list = ls())
set.seed(55)
setwd('MyProjects/NBA/R/Projects/OKCThunder_DS&S')
library(readxl)
data <- read_excel('shots_csv.xlsx',
col_names = FALSE)
data <- read_excel('shots_data.csv',
col_names = FALSE)
data <- read.csv('shots_data.csv')
View(data)
A <- data[data$team == 'Team A']
A <- data[data$team == 'Team A', ]
View(A)
B <- data[data$team == 'Team B', ]
View(A)
d <- sqrt(data$x ^ 2 + data$y ^ 2)
data$distance <- sqrt(data$x ^ 2 + data$y ^ 2)
View(data)
# Author: Cale Williams
# Last Updated: 01/02/2022
# ADMINISTRATIVE WORK -----------------------------------------------------
# Clear workspace and set seed.
rm(list = ls())
set.seed(55)
setwd('MyProjects/NBA/R/Projects/OKCThunder_DS&S')
# DATA PREPARATION --------------------------------------------------------
# Read in raw data.
data <- read.csv('shots_data.csv')
# Calculate shot distance.
data$distance <- sqrt(data$x ^ 2 + data$y ^ 2)
# Split data by team.
A <- data[data$team == 'Team A', ]
B <- data[data$team == 'Team B', ]
View(A)
for (i in 1:nrow(data)) {
print(i)
}
library(sp)
# Author: Cale Williams
# Last Updated: 01/02/2022
# ADMINISTRATIVE WORK -----------------------------------------------------
# Clear workspace and set seed.
rm(list = ls())
set.seed(55)
setwd('MyProjects/NBA/R/Projects/OKCThunder_DS&S')
library(sp)
# DATA PREPARATION --------------------------------------------------------
# Read in raw data.
data <- read.csv('shots_data.csv')
# Calculate shot distance.
data$distance <- sqrt(data$x ^ 2 + data$y ^ 2)
# x_2PT <- c(-22, -22)
# zone_C3_L <-
# shot_2PT <- c()
# shot_NC3 <- c()
# shot_C3 <- c()
for (i in 1:nrow(data)) {
if (data$x[i] <= 22 && data$x[i] >= -22 && data$y[i] <= 7.8) {
shot_2PT <- c(shot_2PT, 1)
shot_NC3 <- c(shot_NC3, 0)
shot_C3 <- c(shot_C3, 0)
}
}
# # Split data by team.
# A <- data[data$team == 'Team A', ]
# B <- data[data$team == 'Team B', ]
# Author: Cale Williams
# Last Updated: 01/02/2022
# ADMINISTRATIVE WORK -----------------------------------------------------
# Clear workspace and set seed.
rm(list = ls())
set.seed(55)
setwd('MyProjects/NBA/R/Projects/OKCThunder_DS&S')
library(sp)
# DATA PREPARATION --------------------------------------------------------
# Read in raw data.
data <- read.csv('shots_data.csv')
# Calculate shot distance.
data$distance <- sqrt(data$x ^ 2 + data$y ^ 2)
# x_2PT <- c(-22, -22)
# zone_C3_L <-
shot_2PT <- c()
shot_NC3 <- c()
shot_C3 <- c()
for (i in 1:nrow(data)) {
if (data$x[i] <= 22 && data$x[i] >= -22 && data$y[i] <= 7.8) {
shot_2PT <- c(shot_2PT, 1)
shot_NC3 <- c(shot_NC3, 0)
shot_C3 <- c(shot_C3, 0)
}
}
# # Split data by team.
# A <- data[data$team == 'Team A', ]
# B <- data[data$team == 'Team B', ]
shot_2PT
# Author: Cale Williams
# Last Updated: 01/02/2022
# ADMINISTRATIVE WORK -----------------------------------------------------
# Clear workspace and set seed.
rm(list = ls())
set.seed(55)
setwd('MyProjects/NBA/R/Projects/OKCThunder_DS&S')
library(sp)
# DATA PREPARATION --------------------------------------------------------
# Read in raw data.
data <- read.csv('shots_data.csv')
# Calculate shot distance.
data$distance <- sqrt(data$x ^ 2 + data$y ^ 2)
# x_2PT <- c(-22, -22)
# zone_C3_L <-
shot_2PT <- c()
shot_NC3 <- c()
shot_C3 <- c()
for (i in 1:nrow(data)) {
if (data$x[i] <= 22 && data$x[i] >= -22 && data$y[i] <= 7.8) {
shot_2PT <- c(shot_2PT, 1)
shot_NC3 <- c(shot_NC3, 0)
shot_C3 <- c(shot_C3, 0)
} else if (data$x[i] < -22 || data$x[i] > 22 && data$y[i] <= 7.8) {
shot_2PT <- c(shot_2PT, 0)
shot_NC3 <- c(shot_NC3, 0)
shot_C3 <- c(shot_C3, 1)
}
}
# # Split data by team.
# A <- data[data$team == 'Team A', ]
# B <- data[data$team == 'Team B', ]
# Author: Cale Williams
# Last Updated: 01/02/2022
# ADMINISTRATIVE WORK -----------------------------------------------------
# Clear workspace and set seed.
rm(list = ls())
set.seed(55)
setwd('MyProjects/NBA/R/Projects/OKCThunder_DS&S')
library(sp)
# DATA PREPARATION --------------------------------------------------------
# Read in raw data.
data <- read.csv('shots_data.csv')
# Calculate shot distance.
data$distance <- sqrt(data$x ^ 2 + data$y ^ 2)
# x_2PT <- c(-22, -22)
# zone_C3_L <-
shot_2PT <- c()
shot_NC3 <- c()
shot_C3 <- c()
for (i in 1:nrow(data)) {
if (data$x[i] <= 22 && data$x[i] >= -22 && data$y[i] <= 7.8) {
shot_2PT <- c(shot_2PT, 1)
shot_NC3 <- c(shot_NC3, 0)
shot_C3 <- c(shot_C3, 0)
} else if (data$x[i] < -22 || data$x[i] > 22 && data$y[i] <= 7.8) {
shot_2PT <- c(shot_2PT, 0)
shot_NC3 <- c(shot_NC3, 0)
shot_C3 <- c(shot_C3, 1)
} else if (data$y[i] > 7.8 && data$distance[i] > 23.75) {
shot_2PT <- c(shot_2PT, 0)
shot_NC3 <- c(shot_NC3, 1)
shot_C3 <- c(shot_C3, 0)
}
}
# # Split data by team.
# A <- data[data$team == 'Team A', ]
# B <- data[data$team == 'Team B', ]
# Author: Cale Williams
# Last Updated: 01/02/2022
# ADMINISTRATIVE WORK -----------------------------------------------------
# Clear workspace and set seed.
rm(list = ls())
set.seed(55)
setwd('MyProjects/NBA/R/Projects/OKCThunder_DS&S')
library(sp)
# DATA PREPARATION --------------------------------------------------------
# Read in raw data.
data <- read.csv('shots_data.csv')
# Calculate shot distance.
data$distance <- sqrt(data$x ^ 2 + data$y ^ 2)
# x_2PT <- c(-22, -22)
# zone_C3_L <-
shot_2PT <- c()
shot_NC3 <- c()
shot_C3 <- c()
for (i in 1:nrow(data)) {
if (data$x[i] <= 22 && data$x[i] >= -22 && data$y[i] <= 7.8) {
shot_2PT <- c(shot_2PT, 1)
shot_NC3 <- c(shot_NC3, 0)
shot_C3 <- c(shot_C3, 0)
} else if (data$x[i] < -22 || data$x[i] > 22 && data$y[i] <= 7.8) {
shot_2PT <- c(shot_2PT, 0)
shot_NC3 <- c(shot_NC3, 0)
shot_C3 <- c(shot_C3, 1)
} else if (data$y[i] > 7.8 && data$distance[i] > 23.75) {
shot_2PT <- c(shot_2PT, 0)
shot_NC3 <- c(shot_NC3, 1)
shot_C3 <- c(shot_C3, 0)
} else if (data$x[i] < -22 && data$y[i] >= 7.8 && data$distance[i] <= 23.75)
shot_2PT <- c(shot_2PT, 0)
shot_NC3 <- c(shot_NC3, 1)
shot_C3 <- c(shot_C3, 0)
}
# # Split data by team.
# A <- data[data$team == 'Team A', ]
# B <- data[data$team == 'Team B', ]
# Author: Cale Williams
# Last Updated: 01/02/2022
# ADMINISTRATIVE WORK -----------------------------------------------------
# Clear workspace and set seed.
rm(list = ls())
set.seed(55)
setwd('MyProjects/NBA/R/Projects/OKCThunder_DS&S')
library(sp)
# DATA PREPARATION --------------------------------------------------------
# Read in raw data.
data <- read.csv('shots_data.csv')
# Calculate shot distance.
data$distance <- sqrt(data$x ^ 2 + data$y ^ 2)
# x_2PT <- c(-22, -22)
# zone_C3_L <-
shot_2PT <- c()
shot_NC3 <- c()
shot_C3 <- c()
for (i in 1:nrow(data)) {
if (data$x[i] <= 22 && data$x[i] >= -22 && data$y[i] <= 7.8) {
shot_2PT <- c(shot_2PT, 1)
shot_NC3 <- c(shot_NC3, 0)
shot_C3 <- c(shot_C3, 0)
} else if (data$x[i] < -22 || data$x[i] > 22 && data$y[i] <= 7.8) {
shot_2PT <- c(shot_2PT, 0)
shot_NC3 <- c(shot_NC3, 0)
shot_C3 <- c(shot_C3, 1)
} else if (data$y[i] > 7.8 && data$distance[i] > 23.75) {
shot_2PT <- c(shot_2PT, 0)
shot_NC3 <- c(shot_NC3, 1)
shot_C3 <- c(shot_C3, 0)
} else if (data$x[i] < -22 || data$x[i] > 22 && data$y[i] >= 7.8 && data$distance[i] <= 23.75)
shot_2PT <- c(shot_2PT, 0)
shot_NC3 <- c(shot_NC3, 1)
shot_C3 <- c(shot_C3, 0)
}
# # Split data by team.
# A <- data[data$team == 'Team A', ]
# B <- data[data$team == 'Team B', ]
# Author: Cale Williams
# Last Updated: 01/02/2022
# ADMINISTRATIVE WORK -----------------------------------------------------
# Clear workspace and set seed.
rm(list = ls())
set.seed(55)
setwd('MyProjects/NBA/R/Projects/OKCThunder_DS&S')
library(sp)
# DATA PREPARATION --------------------------------------------------------
# Read in raw data.
data <- read.csv('shots_data.csv')
# Calculate shot distance.
data$distance <- sqrt(data$x ^ 2 + data$y ^ 2)
# x_2PT <- c(-22, -22)
# zone_C3_L <-
shot_2PT <- c()
shot_NC3 <- c()
shot_C3 <- c()
for (i in 1:nrow(data)) {
if (data$x[i] <= 22 && data$x[i] >= -22 && data$y[i] <= 7.8) {
shot_2PT <- c(shot_2PT, 1)
shot_NC3 <- c(shot_NC3, 0)
shot_C3 <- c(shot_C3, 0)
} else if (data$x[i] < -22 || data$x[i] > 22 && data$y[i] <= 7.8) {
shot_2PT <- c(shot_2PT, 0)
shot_NC3 <- c(shot_NC3, 0)
shot_C3 <- c(shot_C3, 1)
} else if (data$y[i] > 7.8 && data$distance[i] > 23.75) {
shot_2PT <- c(shot_2PT, 0)
shot_NC3 <- c(shot_NC3, 1)
shot_C3 <- c(shot_C3, 0)
} else if (data$x[i] < -22 || data$x[i] > 22 && data$y[i] >= 7.8 && data$distance[i] <= 23.75) {
shot_2PT <- c(shot_2PT, 0)
shot_NC3 <- c(shot_NC3, 1)
shot_C3 <- c(shot_C3, 0)
}
}
# # Split data by team.
# A <- data[data$team == 'Team A', ]
# B <- data[data$team == 'Team B', ]
# Author: Cale Williams
# Last Updated: 01/02/2022
# ADMINISTRATIVE WORK -----------------------------------------------------
# Clear workspace and set seed.
rm(list = ls())
set.seed(55)
setwd('MyProjects/NBA/R/Projects/OKCThunder_DS&S')
library(sp)
# DATA PREPARATION --------------------------------------------------------
# Read in raw data.
data <- read.csv('shots_data.csv')
# Calculate shot distance.
data$distance <- sqrt(data$x ^ 2 + data$y ^ 2)
# x_2PT <- c(-22, -22)
# zone_C3_L <-
shot_2PT <- c()
shot_NC3 <- c()
shot_C3 <- c()
for (i in 1:nrow(data)) {
if (data$x[i] <= 22 && data$x[i] >= -22 && data$y[i] <= 7.8) {
shot_2PT <- c(shot_2PT, 1)
shot_NC3 <- c(shot_NC3, 0)
shot_C3 <- c(shot_C3, 0)
} else if (data$x[i] < -22 || data$x[i] > 22 && data$y[i] <= 7.8) {
shot_2PT <- c(shot_2PT, 0)
shot_NC3 <- c(shot_NC3, 0)
shot_C3 <- c(shot_C3, 1)
} else if (data$y[i] > 7.8 && data$distance[i] > 23.75) {
shot_2PT <- c(shot_2PT, 0)
shot_NC3 <- c(shot_NC3, 1)
shot_C3 <- c(shot_C3, 0)
} else if (data$x[i] < -22 || data$x[i] > 22 && data$y[i] >= 7.8 && data$distance[i] <= 23.75) {
shot_2PT <- c(shot_2PT, 0)
shot_NC3 <- c(shot_NC3, 1)
shot_C3 <- c(shot_C3, 0)
} else {
shot_2PT <- c(shot_2PT, 1)
shot_NC3 <- c(shot_NC3, 0)
shot_C3 <- c(shot_C3, 0)
}
}
# # Split data by team.
# A <- data[data$team == 'Team A', ]
# B <- data[data$team == 'Team B', ]
data$shot_2PT <- shot_2PT
data$shot_NC3 <- shot_NC3
data$shot_C3 <- shot_C3
View(data)
# Split data by team.
A <- data[data$team == 'Team A', ]
B <- data[data$team == 'Team B', ]
View(A)
View(B)
A_shot_2PT_dist <- sum(A_shot_2PT) / nrow(A)
A_shot_2PT_dist <- sum(A$shot_2PT) / nrow(A)
A_shot_NC3_dist <- sum(A$shot_NC3) / nrow(A)
A_shot_C3_dist <- sum(A$shot_C3) / nrow(A)
B_shot_2PT_dist <- sum(B$shot_2PT) / nrow(B)
B_shot_NC3_dist <- sum(B$shot_NC3) / nrow(B)
B_shot_C3_dist <- sum(B$shot_C3) / nrow(B)
A_2PT <- A[A$shot_2PT == 1, ]
View(A_2PT)
# Author: Cale Williams
# Last Updated: 01/02/2022
# ADMINISTRATIVE WORK -----------------------------------------------------
# Clear workspace and set seed.
rm(list = ls())
set.seed(55)
setwd('MyProjects/NBA/R/Projects/OKCThunder_DS&S')
library(sp)
# DATA PREPARATION --------------------------------------------------------
# Read in raw data.
data <- read.csv('shots_data.csv')
# Calculate shot distance.
data$distance <- sqrt(data$x ^ 2 + data$y ^ 2)
# x_2PT <- c(-22, -22)
# zone_C3_L <-
shot_2PT <- c()
shot_NC3 <- c()
shot_C3 <- c()
for (i in 1:nrow(data)) {
if (data$x[i] <= 22 && data$x[i] >= -22 && data$y[i] <= 7.8) {
shot_2PT <- c(shot_2PT, 1)
shot_NC3 <- c(shot_NC3, 0)
shot_C3 <- c(shot_C3, 0)
} else if (data$x[i] < -22 || data$x[i] > 22 && data$y[i] <= 7.8) {
shot_2PT <- c(shot_2PT, 0)
shot_NC3 <- c(shot_NC3, 0)
shot_C3 <- c(shot_C3, 1)
} else if (data$y[i] > 7.8 && data$distance[i] > 23.75) {
shot_2PT <- c(shot_2PT, 0)
shot_NC3 <- c(shot_NC3, 1)
shot_C3 <- c(shot_C3, 0)
} else if (data$x[i] < -22 || data$x[i] > 22 && data$y[i] >= 7.8 && data$distance[i] <= 23.75) {
shot_2PT <- c(shot_2PT, 0)
shot_NC3 <- c(shot_NC3, 1)
shot_C3 <- c(shot_C3, 0)
} else {
shot_2PT <- c(shot_2PT, 1)
shot_NC3 <- c(shot_NC3, 0)
shot_C3 <- c(shot_C3, 0)
}
}
data$shot_2PT <- shot_2PT
data$shot_NC3 <- shot_NC3
data$shot_C3 <- shot_C3
# Split data by team.
A <- data[data$team == 'Team A', ]
B <- data[data$team == 'Team B', ]
A_shot_2PT_dist <- sum(A$shot_2PT) / nrow(A)
A_shot_NC3_dist <- sum(A$shot_NC3) / nrow(A)
A_shot_C3_dist <- sum(A$shot_C3) / nrow(A)
B_shot_2PT_dist <- sum(B$shot_2PT) / nrow(B)
B_shot_NC3_dist <- sum(B$shot_NC3) / nrow(B)
B_shot_C3_dist <- sum(B$shot_C3) / nrow(B)
A_2PT <- A[A$shot_2PT == 1, ]
A_NC3 <- A[A$shot_NC3 == 1, ]
A_C3 <- A[A$shot_C3 == 1, ]
B_2PT <- B[B$shot_2PT == 1, ]
B_NC3 <- B[B$shot_NC3 == 1, ]
B_C3 <- B[B$shot_C3 == 1, ]
View(A_2PT)
A_eFG_2PT <- sum(A_2PT$fgmade) / nrow(A_2PT)
B_eFG_2PT <- sum(B_2PT$fgmade) / nrow(B_2PT)
A_eFG_NC3 <- 1.5 * sum(A_NC3$fgmade) / nrow(A_NC3)
B_eFG_NC3 <- 1.5 * sum(B_NC3$fgmade) / nrow(B_NC3)
A_eFG_C3 <- 1.5 * sum(A_C3$fgmade) / nrow(A_C3)
B_eFG_C3 <- 1.5 * sum(B_C3$fgmade) / nrow(B_C3)
View(B_C3)
