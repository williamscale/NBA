ylab(expression(hat(epsilon))) +
geom_hline(aes(yintercept = 0),
color = '#6c71c4',
size = 1) +
theme_solarized_2()
ggplot(data = data,
aes(x = seq(from = 1,
to = nrow(data)),
y = resid(model1))) +
geom_point() +
xlab('Order') +
ylab(expression(hat(epsilon))) +
geom_hline(aes(yintercept = 0),
color = '#6c71c4',
size = 1) +
theme_solarized_2()
# Transform via Box-Cox.
bc <- boxcox(data$performance ~ data$chmax)
# Extract optimal lambda.
lambda <- bc$x[which.max(bc$y)]
lambda
# Round lambda.
lambda.r <- round(lambda,
digits = 0)
# Plot scatter.
ggplot(data = data,
aes(x = fitted(model2),
y = resid(model2))) +
geom_point() +
xlab(expression(hat(y))) +
ylab(expression(hat(epsilon))) +
geom_hline(aes(yintercept = 0),
color = '#6c71c4',
size = 1) +
theme_solarized_2()
ggplot(data = data,
aes(x = seq(from = 1,
to = nrow(data)),
y = resid(model2))) +
geom_point() +
xlab('Order') +
ylab(expression(hat(epsilon))) +
geom_hline(aes(yintercept = 0),
color = '#6c71c4',
size = 1) +
theme_solarized_2()
# Plot scatter.
ggplot(data = data,
aes(x = seq(from = 1,
to = nrow(data)),
y = resid(model2))) +
geom_point() +
xlab('Order') +
ylab(expression(hat(epsilon))) +
geom_hline(aes(yintercept = 0),
color = '#6c71c4',
size = 1) +
theme_solarized_2()
# Create new data to predict on.
new <- data.frame(chmax = c(128))
# Predict using model1.
pred1 <- predict(model1,
newdata = new,
interval = 'predict',
level = 0.95)
# Predict using model2.
# Prediction is log(y), so take exponent.
pred2 <- exp(predict(model2,
newdata = new,
interval = 'predict',
level = 0.95))
# Create new data to predict on.
new <- data.frame(chmax = c(128))
# Predict using model1.
pred1 <- predict(model1,
newdata = new,
interval = 'predict',
level = 0.95)
pred1
# Predict using model2.
# Prediction is log(y), so take exponent.
pred2 <- exp(predict(model2,
newdata = new,
interval = 'predict',
level = 0.95))
# Create new data to predict on.
new <- data.frame(chmax = c(128))
# Predict using model1.
pred1 <- predict(model1,
newdata = new,
interval = 'predict',
level = 0.95)
pred1
# Predict using model2.
# Prediction is log(y), so take exponent.
pred2 <- exp(predict(model2,
newdata = new,
interval = 'predict',
level = 0.95))
pred2
pred1[1]
pred1
round(pred1[1], 0)
# Predict using model2.
# Prediction is log(y), so take exponent.
pred2 <- predict(model2,
newdata = new,
interval = 'predict',
level = 0.95)
# Create new data to predict on.
new <- data.frame(chmax = c(128))
# Predict using model1.
pred1 <- predict(model1,
newdata = new,
interval = 'predict',
level = 0.95)
pred1
# Predict using model2.
# Prediction is log(y), so take exponent.
pred2 <- exp(predict(model2,
newdata = new,
interval = 'predict',
level = 0.95))
pred2
summary(model1)
summary(model1)$coefficients
summary(model1)$coefficients[2, 3]
?pt
pt(t, lower.tail = TRUE)
pt(t, 207, lower.tail = TRUE)
pt(b1.t, 207, lower.tail = TRUE)
pt(b1.t, 205, lower.tail = TRUE)
1-pt(b1.t, 205, lower.tail = TRUE)
xxx <- 1-pt(b1.t, 205, lower.tail = TRUE)
xxx <- 1-pt(b1.t, 205, lower.tail = FALSE)
xxx <- pt(b1.t, 205, lower.tail = FALSE)
model1
summary(model1)
model1$df.residual
p.val <- pt(b1.t,
df = model1$df.residual - 2,
lower.tail = FALSE)
p.val <- pt(b1.t,
df = model1$df.residual,
lower.tail = FALSE)
p.val <- pt(b1.t,
df = model1$df.residual - 2,
lower.tail = FALSE)
pnorm(b1.t)
?pnorm
round(p.val, 3)
# Calculate one-sided p-value.
p.val <- pt(b1.t,
df = model1$df.residual - 2,
lower.tail = FALSE)
p.val
# Plot scatter.
ggplot(data = data,
aes(x = chmax,
y = performance)) +
geom_point() +
geom_smooth(method = lm,
formula = y ~ x,
se = FALSE,
color = '#2aa198') +
xlab('CPU Maximum Channels') +
ylab('Performance') +
theme_solarized_2()
pt(10.938, 2071-)
1-pt(10.938, 207)
pt(10.938, 207)
pt(10.938, 207, lower = F)
?pt
# Clear workspace and set seed.
rm(list = ls())
set.seed(55)
setwd('C:/Users/caler/Documents/MyProjects/NBA/R/Projects/Spurs_Trends')
source('../../Scrapers/bballref_playerlinks.R')
source('../../Scrapers/bballref_gamelog.R')
library(dplyr)
library(tidyr)
library(reshape2)
# DATA PREPARATION --------------------------------------------------------
season = '2022'
spurs <- c('Keldon Johnson', 'Lonnie Walker IV', 'Drew Eubanks',
'Dejounte Murray', 'Derrick White', 'Devin Vassell',
'Jakob Poeltl', 'Tre Jones', 'Keita Bates-Diop',
'Doug McDermott', 'Jock Landale')
last.inits <- c('j', 'w', 'e', 'm', 'w', 'v', 'p', 'j', 'b', 'm', 'l')
g <- seq(from = 1, to = 52, by = 1)
mp <- data.frame(Rk = g)
for (i in 1:length(spurs)) {
print(spurs[i])
print(last.inits[i])
mp.i <- player_gamelog(player = spurs[i], season = season, last.init = last.inits[i])[, c('Rk', 'MP')]
mp.i$MP[mp.i$MP == 'Inactive' | mp.i$MP == 'Did Not Play'] <- 0
mp.i <- separate(data = mp.i,
col = MP,
into = c('M', 'S'),
sep = ':')
mp.i$MP <- as.numeric(mp.i$M) + as.numeric(mp.i$S) / 60
mp.i <- mp.i[, c('Rk', 'MP')]
mp.i <- mp.i %>%
mutate(Rk = as.numeric(Rk))
mp <- mp %>%
full_join(mp.i,
by = 'Rk')
}
colnames(mp) <- c('Rk', spurs)
View(mp)
library(reshape)
?melt
mp.melt <- melt(mp,
id.vars = c('Rk'))
View(mp.melt)
mp.melt <- melt(mp,
id.vars = c('Rk'),
variable_name = 'Player')
View(mp.melt)
ggplot(data = mp,
aes(x = Rk,
y = value)) +
geom_line(aes(color = Player))
mp.melt <- melt(mp,
id.vars = c('Rk'),
variable_name = 'Player')
ggplot(data = mp,
aes(x = Rk,
y = value)) +
geom_line(aes(color = Player))
ggplot(data = mp.melt,
aes(x = Rk,
y = value)) +
geom_line(aes(color = Player))
View(mp.melt)
ggplot(mp.melt, aes(Rk, value)) +
geom_line() +
facet_grid(Player ~ .)
View(mp)
kj <- ggplot(data = mp,
aes(x = Rk,
y = `Keldon Johnson`))
kj
View(kj)
kj <- ggplot(data = mp,
aes(x = Rk,
y = `Keldon Johnson`)) +
geom_scatter()
kj <- ggplot(data = mp,
aes(x = Rk,
y = `Keldon Johnson`)) +
geom_point()
kj
par(mfrow = c(4, 4))
ggplot(data = mp,
aes(x = Rk,
y = `Keldon Johnson`)) +
geom_point()
ggplot(data = mp,
aes(x = Rk,
y = `Lonnie Walker IV`)) +
geom_point()
par(mfrow = c(4, 4))
ggplot(data = mp,
aes(x = Rk,
y = `Keldon Johnson`)) +
geom_point()
ggplot(data = mp,
aes(x = Rk,
y = `Lonnie Walker IV`)) +
geom_point()
par(mfrow = c(2, 2))
ggplot(data = mp,
aes(x = Rk,
y = `Keldon Johnson`)) +
geom_point()
ggplot(data = mp,
aes(x = Rk,
y = `Lonnie Walker IV`)) +
geom_point()
ggplot(data = mp,
aes(x = Rk,
y = `Drew Eubanks`)) +
geom_point()
ggplot(data = mp,
aes(x = Rk,
y = `Dejounte Murray`)) +
geom_point()
par(mfrow = c(2, 2))
plot(data = mp,
aes(x = Rk,
y = `Keldon Johnson`)) +
geom_point()
plot(data = mp,
aes(x = Rk,
y = `Lonnie Walker IV`)) +
geom_point()
kj <- ggplot(data = mp,
aes(x = Rk,
y = `Keldon Johnson`)) +
geom_point()
lw <- ggplot(data = mp,
aes(x = Rk,
y = `Lonnie Walker IV`)) +
geom_point()
de <- ggplot(data = mp,
aes(x = Rk,
y = `Drew Eubanks`)) +
geom_point()
dm <- ggplot(data = mp,
aes(x = Rk,
y = `Dejounte Murray`)) +
geom_point()
grid.arrange(kj, lw, de, dm, ncol = 2)
library(gridExtra)
grid.arrange(kj, lw, de, dm, ncol = 2)
kj <- ggplot(data = mp,
aes(x = Rk,
y = `Keldon Johnson`)) +
geom_point()
lw <- ggplot(data = mp,
aes(x = Rk,
y = `Lonnie Walker IV`)) +
geom_point()
de <- ggplot(data = mp,
aes(x = Rk,
y = `Drew Eubanks`)) +
geom_point()
dm <- ggplot(data = mp,
aes(x = Rk,
y = `Dejounte Murray`)) +
geom_point()
dw <- ggplot(data = mp,
aes(x = Rk,
y = `Derrick White`)) +
geom_point()
dv <- ggplot(data = mp,
aes(x = Rk,
y = `Devin Vassell`)) +
geom_point()
grid.arrange(kj, lw, de, dm, ncol = 3)
grid.arrange(kj, lw, de, dm, dw, dv ncol = 3)
grid.arrange(kj, lw, de, dm, dw, dv, ncol = 3)
kj <- ggplot(data = mp,
aes(x = Rk,
y = `Keldon Johnson`)) +
geom_point() +
geom_smooth()
grid.arrange(kj, lw, de, dm, dw, dv, ncol = 3)
?geom_smooth
kj <- ggplot(data = mp,
aes(x = Rk,
y = `Keldon Johnson`)) +
geom_point() +
geom_smooth()
lw <- ggplot(data = mp,
aes(x = Rk,
y = `Lonnie Walker IV`)) +
geom_point() +
geom_smooth()
de <- ggplot(data = mp,
aes(x = Rk,
y = `Drew Eubanks`)) +
geom_point() +
geom_smooth()
dm <- ggplot(data = mp,
aes(x = Rk,
y = `Dejounte Murray`)) +
geom_point() +
geom_smooth()
dw <- ggplot(data = mp,
aes(x = Rk,
y = `Derrick White`)) +
geom_point() +
geom_smooth()
dv <- ggplot(data = mp,
aes(x = Rk,
y = `Devin Vassell`)) +
geom_point() +
geom_smooth()
jp <- ggplot(data = mp,
aes(x = Rk,
y = `Jakob Poeltl`)) +
geom_point() +
geom_smooth()
tj <- ggplot(data = mp,
aes(x = Rk,
y = `Tre Jones`)) +
geom_point() +
geom_smooth()
kbd <- ggplot(data = mp,
aes(x = Rk,
y = `Keita Bates-Diop`)) +
geom_point() +
geom_smooth()
dmc <- ggplot(data = mp,
aes(x = Rk,
y = `Doug McDermott`)) +
geom_point() +
geom_smooth()
jl <- ggplot(data = mp,
aes(x = Rk,
y = `Jock Landale`)) +
geom_point() +
geom_smooth()
grid.arrange(kj, lw, de, dm, dw, dv, jp, tj, kbd, dmc, jl, ncol = 4)
# Clear workspace and set seed.
rm(list = ls())
set.seed(55)
setwd('C:/Users/caler/Documents/MyProjects/NBA/R/Projects/Spurs_Trends')
source('../../Scrapers/bballref_playerlinks.R')
source('../../Scrapers/bballref_gamelog.R')
library(dplyr)
library(tidyr)
library(reshape)
library(gridExtra)
library(ggthemes)
# DATA PREPARATION --------------------------------------------------------
season = '2022'
spurs <- c('Keldon Johnson', 'Lonnie Walker IV', 'Drew Eubanks',
'Dejounte Murray', 'Derrick White', 'Devin Vassell',
'Jakob Poeltl', 'Tre Jones', 'Keita Bates-Diop',
'Doug McDermott', 'Jock Landale')
last.inits <- c('j', 'w', 'e', 'm', 'w', 'v', 'p', 'j', 'b', 'm', 'l')
g <- seq(from = 1, to = 52, by = 1)
mp <- data.frame(Rk = g)
for (i in 1:length(spurs)) {
mp.i <- player_gamelog(player = spurs[i], season = season, last.init = last.inits[i])[, c('Rk', 'MP')]
mp.i$MP[mp.i$MP == 'Inactive' | mp.i$MP == 'Did Not Play'] <- 0
mp.i <- separate(data = mp.i,
col = MP,
into = c('M', 'S'),
sep = ':')
mp.i$MP <- as.numeric(mp.i$M) + as.numeric(mp.i$S) / 60
mp.i <- mp.i[, c('Rk', 'MP')]
mp.i <- mp.i %>%
mutate(Rk = as.numeric(Rk))
mp <- mp %>%
full_join(mp.i,
by = 'Rk')
}
colnames(mp) <- c('Rk', spurs)
mp.melt <- melt(mp,
id.vars = c('Rk'),
variable_name = 'Player')
kj <- ggplot(data = mp,
aes(x = Rk,
y = `Keldon Johnson`)) +
geom_point() +
geom_smooth() +
theme_solarized_2()
lw <- ggplot(data = mp,
aes(x = Rk,
y = `Lonnie Walker IV`)) +
geom_point() +
geom_smooth() +
theme_solarized_2()
de <- ggplot(data = mp,
aes(x = Rk,
y = `Drew Eubanks`)) +
geom_point() +
geom_smooth() +
theme_solarized_2()
dm <- ggplot(data = mp,
aes(x = Rk,
y = `Dejounte Murray`)) +
geom_point() +
geom_smooth() +
theme_solarized_2()
dw <- ggplot(data = mp,
aes(x = Rk,
y = `Derrick White`)) +
geom_point() +
geom_smooth() +
theme_solarized_2()
dv <- ggplot(data = mp,
aes(x = Rk,
y = `Devin Vassell`)) +
geom_point() +
geom_smooth() +
theme_solarized_2()
jp <- ggplot(data = mp,
aes(x = Rk,
y = `Jakob Poeltl`)) +
geom_point() +
geom_smooth() +
theme_solarized_2()
tj <- ggplot(data = mp,
aes(x = Rk,
y = `Tre Jones`)) +
geom_point() +
geom_smooth() +
theme_solarized_2()
kbd <- ggplot(data = mp,
aes(x = Rk,
y = `Keita Bates-Diop`)) +
geom_point() +
geom_smooth() +
theme_solarized_2()
dmc <- ggplot(data = mp,
aes(x = Rk,
y = `Doug McDermott`)) +
geom_point() +
geom_smooth() +
theme_solarized_2()
jl <- ggplot(data = mp,
aes(x = Rk,
y = `Jock Landale`)) +
geom_point() +
geom_smooth() +
theme_solarized_2()
grid.arrange(kj, lw, de, dm, dw, dv, jp, tj, kbd, dmc, jl, ncol = 4)
